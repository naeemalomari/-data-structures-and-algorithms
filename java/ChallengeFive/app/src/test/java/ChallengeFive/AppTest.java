/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ChallengeFive;
import ChallengeFive.data.LinkedListNode;
import ChallengeFive.stucture.LinkedList;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
class AppTest {
  @Test
  void instantiateLinkedList() {
    LinkedList MyTest = new LinkedList();
    assertNull(MyTest.head);
  }

  @Test
  void canInsert() {
    LinkedList MyTest = new LinkedList();
    MyTest.insert("20");
    MyTest.insert("50");
    MyTest.insert("100");
    String expected = "{ 100 } -> { 50 } -> { 20 } -> NULL";
    assertEquals(expected, MyTest.toString());
  }

  @Test
  void headPointsRight() {
    LinkedList MyTest = new LinkedList();
    MyTest.insert("20");
    MyTest.insert("50");
    MyTest.insert("100");
    assertEquals("100", MyTest.head.getData());
  }

  @Test
  void canInsertMultiple() {
    LinkedList MyTest = new LinkedList();
    MyTest.insert("10");
    MyTest.insert("20");
    MyTest.insert("50");
    MyTest.insert("100");
    String expected = "{ E }  -------->  { N }  -------->  { G }  -------->  { N }  -------->  { A }  -------->  { I }  -------->  { M. }  -------->  NULL ";
    assertEquals(expected, MyTest.toString());
  }

  @Test
  void LinkedListIncludes() {
    LinkedList ll = new LinkedList();
    ll.insert("100");
    ll.insert("50");
    ll.insert("20");
    assertTrue(ll.insert("50"));
  }

  @Test
  void LinkedListNotIncludes() {
    LinkedList ll = new LinkedList();
    ll.insert("100");
    ll.insert("50");
    ll.insert("20");

    assertFalse(ll.insert("30"));
    assertFalse(ll.insert("70"));
  }

  @Test
  void includesWorkingFine() {
    LinkedList ll = new LinkedList();
    ll.insert("N");
    ll.insert("A");
    ll.insert("I");
    ll.insert("M.");

    String expected = "{ N }  -------->  { A }  -------->  { I }  -------->  { M }  -------->  NULL ";
    assertEquals(expected, ll.toString());
  }
}
